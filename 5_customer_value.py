import pandas as pd
import plotly.graph_objects as go
import plotly.express as px
import plotly.io as pio
pio.templates.default = "plotly_white"


#1. Get row data
file_name = "5_customer_value.csv"
data = pd.read_csv(file_name)
print(data)
#print(data.columns)
#print(data.isnull())
#print(data.isnull().sum())


#2. Visualize the distribution of acquisition cost 
# and revenue generated by the customer using histograms
fig = px.histogram(data,
                   x="cost",
                   nbins=20,
                   title="Distribution of Acquisition Cost")
#fig.show()

fig = px.histogram(data,
                   x="revenue",
                   nbins=20,
                   title="Distribuition of Revenue")
#fig.show()


#3. Compare the cost of acquisition across different channels
data["roi"] = data["revenue"] / data["cost"]
cost_by_channel = data.groupby("channel")["cost"].mean().reset_index()
revenue_by_channel = data.groupby("channel")["revenue"].sum().reset_index()
conversion_by_channel = data.groupby("channel")["conversion_rate"].mean().reset_index()
roi_by_channel = data.groupby("channel")["roi"].mean().reset_index()
roi_by_channel = roi_by_channel.merge(cost_by_channel, on="channel")
roi_by_channel = roi_by_channel.merge(revenue_by_channel, on="channel")
roi_by_channel = roi_by_channel.merge(conversion_by_channel, on="channel")

print("Mean cost vs revenue by channel: \n", roi_by_channel)

fig = px.bar(cost_by_channel,
             x="channel",
             y="cost",
             title="Customer Acquisition Cost by Channel")
#fig.show()

fig = px.bar(revenue_by_channel,
             x="channel",
             y="revenue",
             title="Customer Revenue by Channel")
#fig.show()

fig = px.bar(conversion_by_channel,
                  x="channel",
                  y="conversion_rate",
                  title="Conversion Rate by Channel")
#fig.show()

fig = px.pie(revenue_by_channel,
             values="revenue",
             names="channel",
             title="Total Revenue by Channel",
             hole=0.6, 
             color_discrete_sequence=px.colors.qualitative.Pastel)
#fig.show()

fig = px.bar(roi_by_channel,
             x="channel",
             y="roi",
             title="ROI by Channel")
#fig.show()


#4. Calculate customer lifetime value
#CLTV = (revenue â€“ cost) * conversion_rate / cost
data["cltv"] = (data["revenue"] - data["cost"]) * (data["conversion_rate"] / data["cost"])
channel_cltv = data.groupby("channel")["cltv"].mean().reset_index()
print(channel_cltv)

fig = px.bar(channel_cltv,
             x="channel",
             y="cltv",
             title="Customer Lifetime Value by Channel",
             color="channel")
fig.update_xaxes("Channel")
fig.update_yaxes("CLTV")
#fig.show()

